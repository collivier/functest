From 03eb38ce54aeec4bc4c1cb3475c6fb84661f8993 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?C=C3=A9dric=20Ollivier?= <cedric.ollivier@orange.com>
Date: Tue, 21 Jul 2020 13:28:50 +0200
Subject: [PATCH] Create new server in test_create_backup
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

test_reboot_server_hard sometimes fail in all gates [1].
This hack could highlight if they are side effects between
test_create_backup and test_reboot_server_hard.

[1] http://artifacts.opnfv.org/functest/E5AZMH89OOK6/functest-opnfv-functest-smoke-cntt-hunter-tempest_full_cntt-run-142/tempest_full_cntt/tempest-report.html

Change-Id: I203562f686b004094e5e18858004b7a2d26567a6
Signed-off-by: CÃ©dric Ollivier <cedric.ollivier@orange.com>
---
 .../api/compute/servers/test_server_actions.py    | 15 ++++++++-------
 1 file changed, 8 insertions(+), 7 deletions(-)

diff --git a/tempest/api/compute/servers/test_server_actions.py b/tempest/api/compute/servers/test_server_actions.py
index d477be0eb..c369311d3 100644
--- a/tempest/api/compute/servers/test_server_actions.py
+++ b/tempest/api/compute/servers/test_server_actions.py
@@ -443,6 +443,7 @@ class ServerActionsTestJSON(base.BaseV2ComputeTest):
         # Check if glance v1 is available to determine which client to use. We
         # prefer glance v1 for the compute API tests since the compute image
         # API proxy was written for glance v1.
+        newserver = self.create_test_server(wait_until='ACTIVE')
         if CONF.image_feature_enabled.api_v1:
             glance_client = self.os_primary.image_client
         elif CONF.image_feature_enabled.api_v2:
@@ -453,7 +454,7 @@ class ServerActionsTestJSON(base.BaseV2ComputeTest):
                 '[image-feature-enabled].')
 
         backup1 = data_utils.rand_name('backup-1')
-        resp = self.client.create_backup(self.server_id,
+        resp = self.client.create_backup(newserver['id'],
                                          backup_type='daily',
                                          rotation=2,
                                          name=backup1)
@@ -481,8 +482,8 @@ class ServerActionsTestJSON(base.BaseV2ComputeTest):
                                       image1_id, 'active')
 
         backup2 = data_utils.rand_name('backup-2')
-        waiters.wait_for_server_status(self.client, self.server_id, 'ACTIVE')
-        resp = self.client.create_backup(self.server_id,
+        waiters.wait_for_server_status(self.client, newserver['id'], 'ACTIVE')
+        resp = self.client.create_backup(newserver['id'],
                                          backup_type='daily',
                                          rotation=2,
                                          name=backup2)
@@ -499,7 +500,7 @@ class ServerActionsTestJSON(base.BaseV2ComputeTest):
         properties = {
             'image_type': 'backup',
             'backup_type': "daily",
-            'instance_uuid': self.server_id,
+            'instance_uuid': newserver['id'],
         }
         params = {
             'status': 'active',
@@ -524,8 +525,8 @@ class ServerActionsTestJSON(base.BaseV2ComputeTest):
         # create the third one, due to the rotation is 2,
         # the first one will be deleted
         backup3 = data_utils.rand_name('backup-3')
-        waiters.wait_for_server_status(self.client, self.server_id, 'ACTIVE')
-        resp = self.client.create_backup(self.server_id,
+        waiters.wait_for_server_status(self.client, newserver['id'], 'ACTIVE')
+        resp = self.client.create_backup(newserver['id'],
                                          backup_type='daily',
                                          rotation=2,
                                          name=backup3)
@@ -536,7 +537,7 @@ class ServerActionsTestJSON(base.BaseV2ComputeTest):
             image3_id = data_utils.parse_image_id(resp.response['location'])
         self.addCleanup(glance_client.delete_image, image3_id)
         # the first back up should be deleted
-        waiters.wait_for_server_status(self.client, self.server_id, 'ACTIVE')
+        waiters.wait_for_server_status(self.client, newserver['id'], 'ACTIVE')
         glance_client.wait_for_resource_deletion(image1_id)
         oldest_backup_exist = False
         if CONF.image_feature_enabled.api_v1:
-- 
2.27.0

